nextflow_workflow {

    name 'Test Workflow JEWELER'
    script 'workflows/jeweler.nf'
    workflow 'JEWELER'
    tag 'workflows'
    tag 'jeweler'

    test('Should generate a report snapshot without failure') {
        when {
            params {
                outdir = "$outputDir"
            }
            workflow {
                """
                input[0] = Channel.of(
                    [[id: 'e_coli_core'], file('https://raw.githubusercontent.com/opencobra/jeweler/testdata/data/model/e_coli_core.xml.gz')]
                )
                input[1] = true
                input[2] = false
                """
            }
        }

        then {
            assert workflow.success

            assert workflow.out.report_snapshot.size() == 1
            assert workflow.out.report_raw.size() == 0
            assert workflow.out.validation.size() == 1

            assert snapshot(workflow.out.versions).match('snapshot-versions')
        }
    }

    test('Should generate a raw JSON report without failure') {
        when {
            params {
                outdir = "$outputDir"
            }
            workflow {
                """
                input[0] = Channel.of(
                    [[id: 'e_coli_core'], file('https://raw.githubusercontent.com/opencobra/jeweler/testdata/data/model/e_coli_core.xml.gz')]
                )
                input[1] = false
                input[2] = true
                """
            }
        }

        then {
            assert workflow.success

            assert workflow.out.report_snapshot.size() == 0
            assert workflow.out.report_raw.size() == 1
            assert workflow.out.validation.size() == 1

            assert snapshot(workflow.out.versions).match('raw-versions')
        }
    }

    test('Should generate both reports without failure') {
        when {
            params {
                outdir = "$outputDir"
            }
            workflow {
                """
                input[0] = Channel.of(
                    [[id: 'e_coli_core'], file('https://raw.githubusercontent.com/opencobra/jeweler/testdata/data/model/e_coli_core.xml.gz')]
                )
                input[1] = true
                input[2] = true
                """
            }
        }

        then {
            assert workflow.success

            assert workflow.out.report_snapshot.size() == 1
            assert workflow.out.report_raw.size() == 1
            assert workflow.out.validation.size() == 1

            assert snapshot(workflow.out.versions).match('snapshot-raw-versions')
        }
    }
}
